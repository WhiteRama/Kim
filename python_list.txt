리스트 기본
pocket = [1, 2, 3, 4]
pocket[0] : 1
pocket[-1] : 4
len(pocket) : 4
pocket.append(5) : pocket[4] = 5를 추가한다
pocket.remove(4) : list내의 4를 가진 공간을 제거
pocket.insert(1,3) : pocket[1]에 3삽입, 기존의 pocket[1]은 pocket[2]로 이동
pocket.pop(3) : pocket[3] 반환 후 제거
pocket[1:3] : pocket[1],pocket[2]의 값 추출
pocket[:3] : pocket[0:3]
pocket[:] : pocket성분 전체

리스트 합치기
a = [1, 2, 3]
b = [4, 5, 6]
c = a + b
>>>c == [1, 2, 3, 4, 5, 6]

리스트 확장
a.extends(b) : a == [1, 2, 3, 4, 5, 6]

리스트 삭제
del a[:] : a의 모든 성분 삭제
del a : a 공간 free

-----------------------------------
튜플 : 변경할 수 없는 리스트

튜플생성(튜플 패킹)
pocket = 1, 2, 3, 4

튜플 언패킹
a, b, c, d = pocket
>>>a == 1, b == 2, c == 3, d == 4

튜플->리스트형 변환
pocket_list = list(pocket)

------------------------------------
세트 : 색인이 없고 중복을 허용하지 않는 데이터 타입 >> 집합으로 생각

세트 패킹
test = set('122333')
>>>test == {'1', '2', '3'}
>>>4 in test == false

세트 활용
a = set('122333')
b = set('333444455555')
>>>a - b == {'1', '2'} : 차집합
>>>a | b == {'1', '2', '3', '4', '5'} : 합집합
>>>a & b == {'3'} : 교집합
>>>a ^ b == {'1', '2', '4', '5'} : 교집합의 여집합

------------------------------------
사전형 : 전체 항목이 정렬되지 않은 key와 value의 쌍으로 구성된 집합
key에 의해 색인을 매김

사전형 패킹
balls = {'red' : 4, 'green' : 5, 'blue' : 6}

>>>balls.keys() == {'red', 'green', 'blue'}
>>>balls.values() == {4, 5, 6}

항목 추가, 변경
balls['black'] = 1

항목 제거
del balls['red']

사전형 -> 리스트형
balls_list = list(balls.keys())
